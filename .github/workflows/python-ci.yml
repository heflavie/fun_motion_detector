name: Python CI and Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  create:
    tags:
      - '*'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11.4, 3.12.1]  
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libgl1-mesa-glx libglib2.0-0
        sudo apt-get install -y git-secrets

    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -

    - name: Install dependencies using Poetry
      run: |
        poetry install --no-root -v
        poetry run pip list
    
    - name: Vérifier l'import des packages
      run: |
        poetry run python -c "import numpy; import cv2; print('Packages importés avec succès')"

    - name: Run unit tests
      run: |
        poetry run python -m unittest discover -s tests -p "test_*.py"

    - name: Run Flake8 for code style and smells
      run: poetry run flake8 .

    - name: Run Bandit for security checks
      run: poetry run bandit -r .

    - name: Run git-secrets to check for secrets
      run: git secrets --scan

  release:
    runs-on: ubuntu-latest
    needs: test
    if: startsWith(github.ref, 'refs/tags/')  # Only run on tags
    permissions:
      contents: write  # Donne l'autorisation de modifier les contenus, nécessaire pour créer des releases
      id-token: write  # Donne l'autorisation d'utiliser le token d'identification
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install git-changelog
      run: |
        pip install git-changelog

    - name: Verify git-changelog installation
      run: |
        pip show git-changelog

    - name: Check if GitHub token is available
      run: |
        echo "Checking if GITHUB_TOKEN is available..."
        gh auth status
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Check GitHub API access with GITHUB_TOKEN
      run: |
        echo "Checking GitHub API access..."
        curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/user

    - name: Generate Changelog
      id: changelog
      run: |
        echo "Generating changelog..."
        git fetch --tags

        # Vérification des tags
        git tag

        # Récupérer le dernier tag
        last_tag=$(git rev-list --tags --max-count=1 --skip=1)
        if [ -z "$last_tag" ]; then  # Si aucun tag trouvé
          echo "No previous tag found. Skipping changelog generation."
          exit 0
        fi

        # Génération du changelog avec git-changelog
        git-changelog -F "$last_tag..HEAD" > CHANGELOG.md
        cat CHANGELOG.md

    - name: Upload release artifacts
      run: |
        mkdir artifacts
        cp CHANGELOG.md artifacts/
        # Ajouter d'autres artefacts si nécessaire (rapports de tests, builds, etc.)

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: artifacts/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy_docs:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'  # Only run on the main branch
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -

    - name: Install dependencies
      run: |
        poetry install --no-root -v
        poetry run pip install sphinx ghp-import
    
    - name: Build Sphinx documentation
      run: |
        poetry run sphinx-build -b html docs/source/ docs/_build/html
    
    - name: Deploy documentation to GitHub Pages
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        poetry run ghp-import -n -p -f docs/_build/html
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
